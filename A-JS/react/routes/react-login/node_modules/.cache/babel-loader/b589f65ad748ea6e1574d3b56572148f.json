{"ast":null,"code":"import _defineProperty from \"/home/fed-w/git_repos/dci-Tutorials/A-JS/react/routes/react-login/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  usersArray: [{\n    id: 1,\n    username: 'Peter',\n    age: 30,\n    password: 'peter12345'\n  }, {\n    id: 1,\n    username: 'dcistudent',\n    age: 33,\n    password: 'dci123'\n  }],\n  logedIn: false,\n  logedUser: {}\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ACTION':\n      let success = false;\n      let logedUser = {};\n      state.usersArray.forEach(user => {\n        if (user.username === action.username && user.password === action.password) {\n          success = true;\n          logedUser = user;\n        }\n      });\n      return _objectSpread({}, state, {\n        logedIn: success,\n        logedUser: logedUser\n      });\n\n    case 'REGISTER_ACTION':\n      let newUserArray = [...state.usersArray];\n      let newID = newUserArray.length + 1;\n\n      let newUser = _objectSpread({\n        id: newID\n      }, action.userinfo);\n\n      newUserArray.push(newUser);\n      return {\n        usersArray: newUserArray,\n        logedIn: true,\n        logedUser: newUser\n      };\n\n    case 'LOGOUT_ACTION':\n      return _objectSpread({}, state, {\n        logedIn: false,\n        logedUser: {}\n      });\n\n    default:\n      state;\n  }\n};\n\nexport default usersReducer;","map":{"version":3,"sources":["/home/fed-w/git_repos/dci-Tutorials/A-JS/react/routes/react-login/src/Reducers/index.js"],"names":["initialState","usersArray","id","username","age","password","logedIn","logedUser","usersReducer","state","action","type","success","forEach","user","newUserArray","newID","length","newUser","userinfo","push"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,CACP;AACIC,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,QAAQ,EAAC,OAFb;AAGIC,IAAAA,GAAG,EAAC,EAHR;AAIIC,IAAAA,QAAQ,EAAC;AAJb,GADO,EAOP;AACIH,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,QAAQ,EAAC,YAFb;AAGIC,IAAAA,GAAG,EAAC,EAHR;AAIIC,IAAAA,QAAQ,EAAC;AAJb,GAPO,CADM;AAejBC,EAAAA,OAAO,EAAE,KAfQ;AAgBjBC,EAAAA,SAAS,EAAE;AAhBM,CAArB;;AAmBA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAiC;AAClD,UAAOA,MAAM,CAACC,IAAd;AAEA,SAAK,cAAL;AACI,UAAIC,OAAO,GAAG,KAAd;AACA,UAAIL,SAAS,GAAG,EAAhB;AACAE,MAAAA,KAAK,CAACR,UAAN,CAAiBY,OAAjB,CAA0BC,IAAD,IAAS;AAC9B,YAAIA,IAAI,CAACX,QAAL,KAAkBO,MAAM,CAACP,QAAzB,IAAsCW,IAAI,CAACT,QAAL,KAAkBK,MAAM,CAACL,QAAnE,EAA6E;AACzEO,UAAAA,OAAO,GAAG,IAAV;AACAL,UAAAA,SAAS,GAAGO,IAAZ;AACH;AACJ,OALD;AAMJ,+BACOL,KADP;AAEIH,QAAAA,OAAO,EAAEM,OAFb;AAGIL,QAAAA,SAAS,EAACA;AAHd;;AAOA,SAAK,iBAAL;AACI,UAAIQ,YAAY,GAAG,CAAC,GAAGN,KAAK,CAACR,UAAV,CAAnB;AACA,UAAIe,KAAK,GAAGD,YAAY,CAACE,MAAb,GAAsB,CAAlC;;AACA,UAAIC,OAAO;AACPhB,QAAAA,EAAE,EAAEc;AADG,SAEJN,MAAM,CAACS,QAFH,CAAX;;AAIAJ,MAAAA,YAAY,CAACK,IAAb,CAAkBF,OAAlB;AACA,aAAO;AACHjB,QAAAA,UAAU,EAAEc,YADT;AAEHT,QAAAA,OAAO,EAAE,IAFN;AAGHC,QAAAA,SAAS,EAAEW;AAHR,OAAP;;AAKJ,SAAK,eAAL;AACI,+BACOT,KADP;AAEIH,QAAAA,OAAO,EAAG,KAFd;AAGIC,QAAAA,SAAS,EAAE;AAHf;;AAMJ;AAASE,MAAAA,KAAK;AAtCd;AAwCH,CAzCD;;AA0CA,eAAeD,YAAf","sourcesContent":["const initialState = {\n    usersArray:[\n        {\n            id:1,\n            username:'Peter',\n            age:30, \n            password:'peter12345'\n        },\n        {\n            id:1,\n            username:'dcistudent',\n            age:33, \n            password:'dci123'\n        }\n    ],\n    logedIn: false,\n    logedUser: {}\n}\n\nconst usersReducer = (state = initialState, action) =>{\n    switch(action.type){\n\n    case 'LOGIN_ACTION':\n        let success = false;\n        let logedUser = {};\n        state.usersArray.forEach((user) =>{\n            if( user.username === action.username &&  user.password === action.password ){\n                success = true;\n                logedUser = user;\n            }\n        })\n    return {\n        ...state,\n        logedIn: success,\n        logedUser:logedUser\n    }\n\n\n    case 'REGISTER_ACTION':\n        let newUserArray = [...state.usersArray];\n        let newID = newUserArray.length + 1;\n        let newUser = {\n            id: newID,\n            ...action.userinfo\n        }\n        newUserArray.push(newUser)\n        return({\n            usersArray: newUserArray,\n            logedIn: true,\n            logedUser: newUser\n        })\n    case 'LOGOUT_ACTION':\n        return({\n            ...state,\n            logedIn : false,\n            logedUser: {}\n        })\n    \n    default: state\n    }\n}\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}